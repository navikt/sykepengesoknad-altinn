management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: prometheus
    path-mapping.prometheus: /prometheus

fasit.environment.name: local
spring:
  h2.console:
    enabled: true
    path: '/h2'
  datasource:
    url: 'jdbc:h2:mem:testdb'
    driver-class-name: 'org.h2.Driver'
    username: 'sa'
    password:
  jta.atomikos.datasource:
    max-pool-size: 32
    min-pool-size: 8


app.name: syfoaltinn

srvsyfoaltinn:
  username: "kek"
  password: "bur"

aktoer.v2.endpointurl: "aktoer.url"
servicegateway.url: "servicegateway.url"
securitytokenservice.url: "sts.url"

javax.net.ssl:
  trustStore: truststore
  trustStorePassword: truststorepassword

spring:
  main.banner-mode: 'off'
  kafka:
    client-id: ${app.name}-${fasit.environment.name}
    bootstrap-servers: localhost:9092
    properties:
      security.protocol: SASL_SSL
      value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${srv$APPLIKASJONSNAVN$.username}" password="${srv$APPLIKASJONSNAVN$.password}";
      ssl.truststore:
        location: ${javax.net.ssl.trustStore}
        password: ${javax.net.ssl.trustStorePassword}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: ${app.name}-${fasit.environment.name}
      max-poll-records: 1
      auto-offset-reset: latest # Som ny konsument / eller om vi mister offsettet vårt skal vi begynne på den siste meldingen
      enable-auto-commit: false # Vi commiter selv offset ved lesing av meldinger