name: Deploy til dev
on:
  push:
    branches:
      - '*'
      - '!master'

#name: Bygg, publish og deploy
#on: push
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/syfoaltinn:${{ github.sha }}
  NAME: syfoaltinn
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-publish:
    name: Bygg, test og push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Restore .m2 cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Bygg og test
        run: |
          mvn --settings maven-settings.xml clean install
      - name: Bygg og push Docker image
        run: |
          docker build -t ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy-to-dev-fss:
    name: Deploy til dev-fss (Q1)
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy til dev-fss
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-dev.yaml

#  deploy-to-prod-fss:
#    if: github.ref == 'refs/heads/master'
#    name: Deploy til prod-fss
#    runs-on: ubuntu-latest
#    needs: build-and-publish
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v1
#      - uses: nais/deploy/actions/deploy@v1
#        name: Deploy til prod-fss
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-fss
#          RESOURCE: nais-prod.yaml
